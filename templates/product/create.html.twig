{% extends 'base.html.twig' %}
{% block body %}
	<div class="register-form">
		<div>
			{% if response is not null and response is not empty %}
				{% if response is iterable %}
					{% for key, values, error in response %}
						{% for item in values %}
							<div class="alert alert-danger">
								{{item}}
							</div>
						{% endfor %}
					{% endfor %}
				{% else %}
					{{response}}
				{% endif %}
			{% endif %}
		</div>
		<h5>Add Product</h5>
		{{ form_start(form, {'attr': {'action': path('product_add')}}) }}
		{{ form_row(form.category) }}
		<div>
			<label>Sub Category</label>

			<select name="product[subcat_id]" id="product_subcat_id" required='required'>
				<option value=''>Sub category</option>
			</select>
		</div>

		{{ form_row(form.title) }}
		{{ form_row(form.price) }}
		{{ form_row(form.image) }}
		{{ form_row(form.description) }}
		{{ form_row(form.submit) }}
		{{ form_end(form, {'render_rest': false}) }}

	</div>

	<script>
		const selectElement = document.querySelector("#product_category");
        selectElement.addEventListener('change', (event) => {
            getSubcategories(event.target.value);
        });

async function getSubcategories(id) {
    var subCategory = document.getElementById("product_subcat_id");
    for (let i = subCategory.options.length - 1; i > 0; i--) {
        subCategory.remove(i);

    }

    const route = "{{ path('category_sub_category', {id: 'id'}) |escape('js') }}";
    var url = route.replace('id', id);
    fetch(url).then((response) => {
        return response.json();
    }).then((response) => {

        for (var i = 0; i < response.length; i++) {
        var option = document.createElement('option');
        option.text = response[i].title;
        option.value = response[i].id;
        subCategory.add(option, null);
        }
    });

}
	</script>
{% endblock %}
